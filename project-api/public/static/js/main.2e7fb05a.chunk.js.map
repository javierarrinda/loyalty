{"version":3,"sources":["services/UserService.js","components/Signup.js","components/Login.js","components/CustomerDetails.js","components/MainPage.js","components/RewardDetails.js","components/Rewards.js","components/NewReward.js","components/AddNewCustomer.js","components/UpdateSpending.js","components/RestaurantIndex.js","App.js","serviceWorker.js","index.js"],"names":["UserService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","getAllCustomers","axios","create","baseURL","process","withCredentials","Signup","state","usernameInput","passwordInput","handleChange","e","setState","defineProperty","target","name","value","handleFormSubmit","preventDefault","userFromDB","console","log","props","logTheUserIntoAppComponent","history","push","catch","err","_this2","react_default","a","createElement","className","onSubmit","placeholder","type","onChange","Link","to","Component","Login","userService","CustomerDetails","nameInput","phoneInput","editing","updateInput","id","editProject","theID","match","params","Axios","theTitle","theDescription","toggleForm","showProjectDetails","theActualCustomer","spendingInput","onClick","src","alt","deleteProject","_id","theThingIGetBackFromApi","phone","MainPage","class","href","RewardDetails","thresholdInput","descriptionInput","customerResponse","rewardResponse","showUsersForReward","map","user","spending","editReward","theRewardId","theName","theThreshold","res","showRewardsForm","description","threshold","Rewards","allTheRewards","fetchRewards","assertThisInitialized","apiRewards","rewardGotten","showAllRewards","currentUser","myRewards","filter","eachReward","restaurantID","NewReward","createANewReward","newThreshold","newName","newDescription","AddNewCustomer","createANewCustomer","newSpending","newPhone","responseFromOurApi","letTheIndexComponentKnowThatWeAddedACustomer","UpdateSpending","theUserToUpdate","updateSpending","allTheUsers","theUser","customerForThisRest","eachUser","updatedSpending","updateCustomer","RestaurantIndex","allTheCustomers","ross","updating","eachCustomer","fetchCustomers","responseFromApi","reverse","showAllCustomers","myCustomers","key","components_AddNewCustomer","components_UpdateSpending","components_NewReward","components_Rewards","App","loggedInUser","error","details","logInTheUser","userToLogIn","showUser","message","fetchUser","theActualUserFromDB","_this3","Switch","Route","path","render","components_Login","assign","components_Signup","components_RestaurantIndex","component","components_RewardDetails","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e7fb05a.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nclass UserService {\n\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n\n\n    this.service = service;\n  }\n\n\n//   axios.create allows you to preconfigure the url (and headers) of axios requests\n// so that when we make an axios request with that object, we pass in a url, and that url gets added onto the end of the url we created the axios object with\n    signup = (username, password) => {\n        return this.service.post('/signup', {username, password})\n        .then(response => response.data)\n    }\n\n\n    login = (username, password) => {\n        return this.service.post('/login', {username, password})\n        .then(response => response.data)\n    }\n\n\n    loggedin = () =>{\n        return this.service.get('/loggedin')\n        .then(response => response.data)\n    }\n\n\n    logout = () =>{\n        return this.service.post('/logout', {})\n        .then(response => response.data)\n    }\n\n    getAllCustomers = () =>{\n        return this.service.get('/customers')\n        .then(response => response.data)\n    }\n\n\n\n}\n\nexport default UserService;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport UserService from '../services/UserService';\nimport {Link} from 'react-router-dom'\n\n\nclass Signup extends Component {\n      state = { usernameInput: '', passwordInput: '' };\n      service = new UserService();\n    \n  \n    handleChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n        // you could just do axios.post('http://localhost:5000/api/signup, {username: this.state.userNameInput, password: this.state.passWordInput}, {withCredentials: true})\n        this.service.signup(this.state.usernameInput, this.state.passwordInput)\n        .then((userFromDB)=>{\n            console.log('------------------------', userFromDB)\n            this.props.logTheUserIntoAppComponent(userFromDB)\n            // here we wait for the API to give us the user object back after logging in\n            // then we pass that user object back to app component\n            this.setState({usernameInput: '', passwordInput: ''})\n\n\n            // redirect \n            this.props.history.push('/restaurant-index');\n\n\n        })\n        .catch((err)=>{\n            console.log('sorry something went wrong', err)\n\n        })\n\n    }\n  \n    render(){\n      return(\n        <div className=\"login-form-parent\">\n            <form className=\"login-form\" onSubmit={this.handleFormSubmit}>\n\n            <div>\n\n     \n                <input  placeholder=\"USERNAME\"type=\"text\" name=\"usernameInput\" value={this.state.usernameInput} onChange={ e => this.handleChange(e)}/>\n                \n                <input placeholder=\"PASSWORD\" name=\"passwordInput\" value={this.state.passwordInput} onChange={ e => this.handleChange(e)} />\n                \n            </div>\n                <button className=\"button-id\">Submit</button>\n            <p>Already have account? \n                <Link to={\"/login\"}> Login</Link>\n            </p>\n            </form>\n\n\n    </div>\n      )\n    }\n  }\n  \n  export default Signup;","\nimport React, {Component} from 'react';\nimport \"../App.css\";\nimport UserService from '../services/UserService';\n\n\nclass Login extends Component {\n      state = { usernameInput: '', passwordInput: '' };\n      userService = new UserService();\n    \n  \n    handleChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n        // you could just do axios.post('http://localhost:5000/api/signup, {username: this.state.userNameInput, password: this.state.passWordInput}, {withCredentials: true})\n        this.userService.login(this.state.usernameInput, this.state.passwordInput)\n        .then((userFromDB)=>{\n            console.log(userFromDB);\n            // here we wait for the API to give us the user object back after logging in\n            this.setState({usernameInput: '', passwordInput: ''})\n            \n            // then we pass that user object back to app component\n            this.props.logTheUserIntoAppComponent(userFromDB)\n            // here, we are getting the user object from the DB\n            // and we're setting AppComponent.state.loggedinuser equal to it\n\n\n            this.props.history.push('/restaurant-index');\n            // then we redirect\n            \n\n\n        })\n        .catch((err)=>{\n            console.log('sorry something went wrong', err)\n\n        })\n\n    }\n  \n    render(){\n      return(\n        <div className=\"login-form-parent\">\n                    <div>\n\n                        <form onSubmit={this.handleFormSubmit} className=\"login-form\">\n\n                        \n                {/* <label>Username:</label> */}\n\n                <div>\n                <input placeholder=\"USERNAME\"type=\"text\" name=\"usernameInput\" value={this.state.usernameInput} onChange={ e => this.handleChange(e)}/>\n                    \n                \n\n                {/* <label>Password:</label> */}\n                <input placeholder=\"PASSWORD\" name=\"passwordInput\" value={this.state.passwordInput} onChange={ e => this.handleChange(e)} />\n                </div>\n\n\n            \n                <button className=\"button-id\" type=\"submit\" value=\"Login\">Continue</button>\n                \n            \n                        </form>\n             </div>\n\n    </div>\n\n\n\n\n\n\n      )\n    }\n  }\n  \n  export default Login;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\n\n\nclass CustomerDetails extends Component{\n    state={\n        nameInput: '',\n        phoneInput: '',\n        editing: false\n        \n    }\n\n\n\n    componentWillMount(){\n        const theID = this.props.match.params.id;\n        Axios.get(process.env.REACT_APP_API_URL + '/api/customers/details/'+theID)\n        .then((theThingIGetBackFromApi)=>{\n\n            console.log('------___---__-_-_--_-_-__-_-_-_-_-___-_-----',theThingIGetBackFromApi)\n\n            this.setState({theActualCustomer: theThingIGetBackFromApi.data,\n                nameInput: theThingIGetBackFromApi.data.name,\n                phoneInput: theThingIGetBackFromApi.data.phone,\n\n            })\n\n        }).catch(()=>{\n\n        })\n    }\n\n    updateInput = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    editProject = (e) => {\n        const theID = this.props.match.params.id;\n        e.preventDefault();\n        Axios.post(process.env.REACT_APP_API_URL + '/customers/edit/'+theID, \n        {theTitle: this.state.nameInput, theDescription: this.state.phoneInput})\n        .then(()=>{\n            this.setState({editing: false});\n            // after we submit the form and the Axios request is complete, we set this.state.editing\n            // back to false so that the form dissappears and looks all fancy\n        })\n        .catch(()=>{\n\n        })\n    }\n\n\n    toggleForm = () =>{\n        this.setState({editing: true})\n\n    }\n\n\n    showProjectDetails = () =>{\n       if(this.state.theActualCustomer){\n\n\n\n            if(this.state.editing){\n                // if this.state.editing is set to true, we will show a form\n\n                return(\n                    <form onSubmit={this.editProject}>\n                    <input className=\"input\" value={this.state.nameInput} onChange={this.updateInput} id=\"nameInput\"/>\n                    <input className=\"input\" value={this.state.phoneInput} onChange={this.updateInput} id=\"phoneInput\"/>\n                    <input className=\"input\" value={this.state.spendingInput} onChange={this.updateInput} id=\"spendingInput\"/>\n                    <button>submit changes</button>\n                </form>\n            )\n\n        }  else{\n            // by default this.state.editing is set to false so when we first load the page we will\n            // see this below, which is just the info but not form\n\n            return(\n                <div>\n                    <span>\n                    {this.state.nameInput}\n                    </span>\n\n                    <span>\n                        {this.state.phoneInput}\n                    </span>\n\n                    <span>\n                        {this.state.spendingInput}\n                    </span>\n                    {/* we put this little image of a pen here, and add an on click function */}\n                    {/* the on click function changes this.state.editing to true */}\n                    {/*  therefore, when we change this.state.editing to true, we show a form instead of just the info */}\n                    <img onClick={this.toggleForm} className=\"pen-pic\" src=\"https://us.123rf.com/450wm/jemastock/jemastock1707/jemastock170717063/82921914-stock-vector-school-pen-write-supply-accessory-icon-vector-illustration.jpg?ver=6\" alt=\"pen\" />\n                </div>\n            )\n        }\n        }\n    }\n\n\n    deleteProject = () =>{\n        Axios.post('https://localhost:5000/api/tasks/delete/'+this.state.theActualCustomer._id, {})\n        .then(()=>{\n            \n            this.props.history.push('/project-index');\n            // this is how your redirect in react\n        })\n        .catch(()=>{\n\n        })\n    }\n\n\n\n\n\n\n\n    render(){\n        console.log(this.props)\n        console.log(this.state)\n        return(\n            <div>\n                <h1> Project Details Page</h1>\n                {this.showProjectDetails()}\n\n                <br />\n                <br />\n                <br />\n                <br />\n            <div>\n                <button onClick={this.deleteProject} className=\"delete\">Delete This Project</button>\n            </div>\n\n                </div>\n        )\n    }\n\n\n\n\n}\n\n\n\nexport default CustomerDetails;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\n\n\nclass MainPage extends Component{\n    render(){\n        return(\n        <div className=\"main-page\">\n        \n        \n        <div className=\"header\">\n        \n        <div className=\"left-side\">\n        \n            <div className=\"quote\">\n                <h3>A customer is the most important visitor on our premises, he is not dependant on us. We are dependant on them.</h3>\n                <h5>Mahatma Gandhi</h5>\n            </div>\n\n            <div className=\"index-buttons\">\n                <button><Link to=\"/signup\" class=\"link\"> Register</Link></button>\n\n                <button><Link to=\"/login\" class=\"link\"> Login </Link></button>\n            </div>\n\n            <div className=\"more-about-us\">\n                <button id=\"about-us-button\">\n                    <a href=\"https://en.wikipedia.org/wiki/Loyalty_business_model\">More About Us</a> \n                </button>\n            </div>\n\n        </div>\n\n            <img src=\"/lost-in-loyalty.png\" alt=\"loyalty\"/>\n\n            {/* <button id=\"signup\">Signup</button> */}\n        </div>\n\n\n\n\n\n        <div className=\"our-mission\">\n\n            <h2>Our Mission</h2>\n            \n            <p>Cradles to Crayons: Provides children from <br/>birth through age 12, living in homeless or low-income<br/> situations, with the essential items<br/> they need to thrive<br/> – at home, at school and at play.</p>\n            \n        </div>\n\n        <div className=\"our-team\">\n\n            <div className=\"about-me\">\n\n\n            \n                <h2>About Me</h2>\n\n                <div className=\"team-images\">\n\n                {/* <img className=\"kodak\" src=\"https://bit.ly/2CqWclM\" alt=\"kodak\"/> */}\n                <img id=\"me-photo\" src=\"https://bit.ly/2CjFvro\" alt=\"Javier Arrinda .jpg\"/>\n                {/* <img className=\"kodak\" src=\"https://bit.ly/2CqWclM\" alt=\"kodak\"/> */}\n\n                </div>\n\n                <div className=\"team-images\">\n                {/* <h4 className=\"kodak\">Rick</h4> */}\n                <h4 className=\"kodak\">Javier Arrinda</h4>\n                {/* <h4 className=\"kodak\">Rick</h4> */}\n                </div>\n\n                <div className=\"team-images\">\n                {/* <p className=\"kodak\">Mad Scientist</p> */}\n                <p className=\"kodak\">Programmer/Web-developer/Visionary</p>\n                {/* <p className=\"kodak\">Mad Scientist</p> */}\n                </div>\n\n            </div>\n\n            <div className=\"cool-links\">\n            \n                <h2>Buncha Cool Links</h2>\n\n                <a href=\"https://www.youtube.com/watch?v=0QO0yZldC2M&t=123s\">Reddit R/Place</a>\n                <a href=\"https://www.nicereply.com/blog/the-importance-of-customer-loyalty/\">Importance of Customer Loyalty</a>\n                <a href=\"https://github.com/javierarrinda\">My Github!!!</a>\n                <a href=\"\">Add me on LinkedIn</a>\n            \n            </div>\n\n\n        </div>\n        \n        \n        \n            <footer>A creation forced upon the creative.</footer>\n        \n        </div>\n        )\n    }\n}\n\nexport default MainPage;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\n\n\nclass RewardDetails extends Component{\n    state={\n        thresholdInput: '',\n        nameInput: '',\n        descriptionInput: '',\n        customerResponse: [],\n        rewardResponse: {},\n        editing: false\n    }\n\n    componentWillMount(){\n        // const theRestaurantId = this.props.currentUser._id;\n        const theRewardId = this.props.match.params.id;\n        console.log('component will mount this',this)\n        Axios.post(process.env.REACT_APP_API_URL + '/rewards/approved/'+theRewardId, {}, {withCredentials: true})\n        .then((res)=>{\n            console.log(res)\n            this.setState({customerResponse: res.data.customerResponse, rewardResponse: res.data.rewardResponse})\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    handleChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    showUsersForReward = ()=>{\n\n        return this.state.customerResponse.map((user)=>{\n            \n            return(\n                <div className=\"user-rewards\">\n                    <h3>Name: {user.name}</h3>\n                    <h3>Spent: ${user.spending}</h3>\n                </div>\n            )\n        })\n    }\n\n    editReward = (e) =>{\n        // e.preventDefault();\n        const theRewardId = this.props.match.params.id;\n        console.log('reward id is this {{{{',theRewardId);\n        Axios.post(process.env.REACT_APP_API_URL + '/rewards/edit/'+theRewardId, {theName: this.state.nameInput, theDescription: this.state.descriptionInput, theThreshold: this.state.thresholdInput}, {withCredentials: true})\n        .then((res)=>{\n            console.log(res)\n            this.setState({editing: false})\n        })\n        .catch((err)=>{\n            console.log('error occurred' ,err)\n        })\n    }\n\n    toggleForm = () =>{\n        this.setState({editing: true})\n    }\n\n    deleteProject = () =>{\n        const theRewardId = this.props.match.params.id;\n        Axios.post(process.env.REACT_APP_API_URL + '/rewards/delete/'+theRewardId, {})\n        .then(()=>{\n            \n            this.props.history.push('/project-index');\n            // this is how your redirect in react\n        })\n        .catch(()=>{\n\n        })\n    }\n\n    showRewardsForm = () =>{\n        if(this.state.rewardResponse){\n            if(this.state.editing){\n                return(\n                    <div className=\"reward-details-a\">\n                    \n                    <form className=\"reward-details-b\"onSubmit={this.editReward}>\n                        <input name=\"nameInput\" placeholder=\"NAME INPUT\" value={this.state.nameInput} onChange={ e => this.handleChange(e)}/>\n                        \n                        <input name=\"descriptionInput\" placeholder=\"DESCRIPTION\" value={this.state.descriptionInput} onChange={ e => this.handleChange(e)}/>\n                        \n                        <input name=\"thresholdInput\" placeholder=\"THRESHOLD\" value={this.state.thresholdInput} onChange={ e => this.handleChange(e)}/>\n\n                        <button>Submit</button>\n                        \n                    \n                    \n                    </form>\n\n                    </div>\n                )\n            } else {\n\n                return(\n                                <div className=\"reward-details-a\">\n                                \n                        <div className=\"reward-details-b\">\n\n                            <h1>{this.state.rewardResponse.name}</h1>\n\n                            <h3>{this.state.rewardResponse.description}</h3>\n\n                            <h2>\n\n                            $ {this.state.rewardResponse.threshold}\n                            </h2>\n\n\n                            <button className=\"button-id\" onClick={this.toggleForm}>Edit</button>\n\n                            <button onClick={this.deleteProject} className=\"button-id\">Delete this Reward</button>\n                                    \n\n                        </div>\n                                \n                                </div>\n\n                    )\n\n            }\n        }\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"reward-details-background\">\n            {/* <h2> */}\n            <h2>Reward Details: </h2>\n\n            {this.showRewardsForm()}\n\n            <div className=\"user-rewards-div\">\n            <h2>Customers for this Reward:</h2>\n            {this.showUsersForReward()}\n            </div>\n\n\n\n            </div>\n        )\n    }\n}\n\n\nexport default RewardDetails;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\n\nclass Rewards extends Component{\n        \n    state={\n            allTheRewards: []\n        }\n\n    componentWillMount(){\n       this.fetchRewards()\n    }\n\n\n    fetchRewards = () =>{\n        console.log(this)\n        Axios.get(process.env.REACT_APP_API_URL + '/rewards', {withCredentials: true})\n        .then((apiRewards)=>{\n            console.log('api rewards go here',apiRewards);\n            this.setState({allTheRewards: apiRewards.data.rewardGotten})\n        })\n        .catch((err)=>{\n            console.log('error', err);\n        })\n    }\n\n    showAllRewards = () =>{\n       \n        if(this.state.allTheRewards && this.props.currentUser){\n            const myRewards = this.state.allTheRewards.filter((eachReward)=>{\n                console.log(\"each reward\", eachReward)\n                return eachReward.restaurantID === this.props.currentUser._id\n            })\n            console.log('my rewards',myRewards)\n            return myRewards.map((eachReward)=>{\n                return(\n                    <div>\n                        <Link id=\"rewards-links\" to={'/rewards/edit/'+eachReward._id}>{eachReward.name}</Link>\n                    </div>\n                )\n            })\n        }\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"show-rewards-box\">\n        <h1>Rewards:</h1>\n        <h4>\n                {this.showAllRewards()}\n        </h4>\n\n            </div>\n        )\n    }\n}\n\nexport default Rewards;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\n\n\n\nclass NewReward extends Component{\n    state={\n        thresholdInput: '',\n        nameInput: '',\n        descriptionInput: ''\n    }\n\n    updateInput = (e) => {\n        this.setState({[e.target.id]: e.target.value })\n        // this.state[e.target.id] = e.target.value\n        // fancy way of saying this\n    }\n\n    createANewReward = (e) =>{\n        // e.preventDefault();\n        const newThreshold = this.state.thresholdInput;\n        const newName = this.state.nameInput;\n        const newDescription = this.state.descriptionInput;\n        Axios.post(process.env.REACT_APP_API_URL + '/rewards/newReward', \n        {threshold: newThreshold, name: newName, description: newDescription},\n        {withCredentials: true})\n        .then((rewardResponse)=>{\n            console.log('reward response here tutututuutututuutututuututututututututuututututututututututu',rewardResponse)\n        })\n        .catch((err)=>{\n            console.log('error creating reward', err);\n        })\n    }\n\n\n    render(){\n        return(\n        <div className=\"new-reward-component\">\n        <h2>Add Reward:</h2>\n        <form onSubmit={this.createANewReward}>\n                <span>\n\n        <label>Title:</label>\n        <input value={this.state.nameInput} id=\"nameInput\" onChange={this.updateInput} />\n                </span>\n                \n                <span>\n        <label>Description:</label>\n        <input type=\"textarea\" value={this.state.descriptionInput} id=\"descriptionInput\" onChange={this.updateInput} />\n                </span>\n\n                <span>\n        <label>Spending:</label>\n        <input type=\"number\" value={this.state.thresholdInput} id=\"thresholdInput\" onChange={this.updateInput} />\n                </span>\n\n        <button>Add</button>\n\n        </form>\n\n\n        </div>\n        )\n    }\n}\n\n\n\n\nexport default NewReward;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass AddNewCustomer extends Component {\n    state={\n        nameInput: '',\n        phoneInput: '',\n        spendingInput: ''\n    }\n\n    updateInput = (e) => {\n        this.setState({[e.target.id]: e.target.value })\n        // this.state[e.target.id] = e.target.value\n        // fancy way of saying this\n    }\n\n    createANewCustomer = (e) => {\n        e.preventDefault();\n        const newName = this.state.nameInput;\n        const newSpending = this.state.spendingInput;\n        const newPhone = this.state.phoneInput;\n        // grab the values from the DOM\n\n        // gotta send withCredentials: true as a header because\n        // the route we are posting to uses req.user which is by default protected by express\n        Axios.post(process.env.REACT_APP_API_URL + \"/customers/newCustomer\",\n         {name: newName, spending: newSpending, phone: newPhone},\n         {withCredentials: true})\n         .then((responseFromOurApi)=>{\n            console.log('success', responseFromOurApi)\n\n            this.props.letTheIndexComponentKnowThatWeAddedACustomer();\n            // after we send the axios request, we call the function in the parent component\n            // to make that component go and get all the project again so now it should have the new project we just added\n\n\n         })\n         .catch((err)=>{\n            console.log('error creating task', err)\n         })\n    }\n\n\n    render(){\n        return(\n            <div className=\"addCustomer\">\n                <h2>Add New Customer:</h2>\n                <form onSubmit={this.createANewCustomer}>\n                        <span>\n                    <label>Name:</label>\n                    <input value={this.state.nameInput} id=\"nameInput\" onChange={this.updateInput} />\n                        </span>\n\n                        <span>\n                    <label>Phone Num:</label>\n                    <input type=\"number\" value={this.state.phoneInput} id=\"phoneInput\" onChange={this.updateInput} />\n                        </span>\n\n                        <span>\n                    <label>Spending:</label>\n                    <input type=\"number\" value={this.state.spendingInput} id=\"spendingInput\" onChange={this.updateInput} />\n                        </span>\n\n                    <button>Add</button>\n\n                </form>\n                \n            </div>\n        )\n    }\n\n\n\n\n\n}\n\n\nexport default AddNewCustomer;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport UserService from '../services/UserService';\n\nclass UpdateSpending extends Component{\n    state={\n        phoneInput: '',\n        spendingInput: '',\n        theUserToUpdate: {}\n    }\n\n    service = new UserService();\n\n    updateInput = (e) => {\n        this.setState({[e.target.id]: e.target.value })\n        // this.state[e.target.id] = e.target.value\n        // fancy way of saying this\n    }\n    \n    updateSpending = (e) =>{\n        console.log('this is User Service -- ',this.service);\n        // pass from app.js to restaurant index to update spending in order to filter (currentUser is what im passing)\n        const newSpending = this.state.spendingInput;\n        e.preventDefault();\n        this.service.getAllCustomers()\n        .then((allTheUsers)=>{\n            console.log('these are all the user', allTheUsers);\n            let theUser = allTheUsers.customerForThisRest.filter((eachUser)=>{\n                console.log(\"each user .>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> \", eachUser, this.state);\n               return eachUser.phone == this.state.phoneInput;\n            }) \n            console.log('this is the user to update  ----',theUser[0].spending)\n               Axios.post(process.env.REACT_APP_API_URL + \"/customers/edit/\"+theUser[0]._id,\n                {spending: newSpending},\n                {withCredentials: true})\n                .then((updatedSpending)=>{\n                    this.setState({theUserToUpdate: updatedSpending.data.spending})\n                    console.log('the user to update log',this.state.theUserToUpdate)\n                    console.log('updated spending is this ', updatedSpending)\n                    this.props.updateCustomer(updatedSpending);        \n                })\n                .catch((err)=>{\n                    console.log('error creating task', err)\n                })\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n\n    }\n    render(){\n        return(\n            <div className=\"update-through-phone\">\n            <form onSubmit={this.updateSpending}>\n\n            <h3>Update Customer by Number: </h3>\n                    <span>\n            <label>Phone Number:</label>\n            <input type=\"number\" value={this.state.phoneInput} id=\"phoneInput\" onChange={this.updateInput} />\n                    </span>\n\n                    <span>\n            <label>Spending:</label>\n            <input type=\"number\" value={this.state.spendingInput} id=\"spendingInput\" onChange={this.updateInput} />\n                    </span>\n\n            <button type=\"submit\">Update</button>\n            </form>\n\n            </div>\n        )\n    }\n}\n\nexport default UpdateSpending;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nimport Rewards from './Rewards';\nimport NewReward from './NewReward';\nimport AddNewCustomer from './AddNewCustomer';\nimport UpdateSpending from './UpdateSpending';\n\nclass RestaurantIndex extends Component{\n\n    //look at to-do-list client at between signup and app.js (something is sent from one to the other ) from there look at single project id which updates the input \n    // project index is where he actually gets the information from the logged in user\n    // this.props.currentUser._id\n\n        state={\n            allTheCustomers: []\n        }\n    \n    componentWillMount(){\n        this.fetchCustomers()\n    }\n    // componentWillMount runs every time the component is about to be rendered on the page\n    // in this function, we will make an axios request to our api route\n    // the response we ge back should be equal to an object with a .data key inside it, and that .data will be equal to all the tasks from our API\n    updateCustomer = (ross) =>{\n        console.log('this is ross (the user we are passing in)',ross)\n        //update the allTheCustomers array up top with ross.  So what u got to do is goolge how to replace an object in an arry of object by id. then set the state (by mapping??)\n\n        // const updating = this.state.allTheCustomers.map(ross => this.state.allTheCustomers.find(j => j.id == ross.id || ross))\n        // .then((getBackFromRoss)=>{\n            const updating = this.state.allTheCustomers.map((eachCustomer) =>{\n                console.log('each customer log',eachCustomer, ross)\n                if (eachCustomer._id == ross.data._id){\n                    return ross.data;\n                } else {\n                    return eachCustomer;\n                }\n            })\n            console.log('updating is ',updating)\n            this.setState({allTheCustomers: updating})\n            // console.log('getting back from ross',getBackFromRoss);\n        // })\n        // .catch((err)=>{\n        //     console.log('there was an error',err)\n        // })\n        // console.log('I am updating == ', updating[0])\n        // return updating[0];\n    }\n\n    fetchCustomers = () =>{\n        console.log(this)\n\n        console.log(this.props)\n        Axios.get(process.env.REACT_APP_API_URL + '/customers', {withCredentials: true})\n            .then((responseFromApi)=>{\n            console.log('this is the response from api for customers',responseFromApi);\n            this.setState({allTheCustomers: responseFromApi.data.customerForThisRest.reverse()}) \n            // .reverse is just so we see the newest tasks at the top of the page\n            // once we get all the tasks, we set the state so that the state will have all the tasks in there\n        })\n        .catch((err)=>{\n        })\n    }\n\n    // because componentWillMount will still allow the component to intialize before running, we can protect ourselves\n    // by putting an if statement before anytime we want to loop through something in our state\n    showAllCustomers = () => {\n        console.log('this is this----',this)\n        if(this.state.allTheCustomers && this.props.currentUser){\n\n            const myCustomers = this.state.allTheCustomers.filter((eachCustomer)=>{\n                //return eachCustomer;\n                return eachCustomer.restaurantID === this.props.currentUser._id\n            })\n            console.log(myCustomers)\n\n            // once we have all the tasks in the state, we can map through them as we normally do\n            return myCustomers.map((eachCustomer)=>{\n                return(\n                    <div key={eachCustomer._id} className=\"countries-flex\">\n                    <div className=\"box-for-each-customer\">\n\n                     <h3>{eachCustomer.name}</h3>\n                     <h3>Phone #: {eachCustomer.phone}</h3>\n                    <h4>Spent: $ {eachCustomer.spending}</h4>\n\n                    {/* <Link to={'/customers/details'+ eachCustomer._id} >See Details</Link>  */}\n                    </div>\n                </div>\n            )\n        })\n        }\n    }\n\n    render(){\n      console.log('this is this on index',this);\n        return(\n            <div className=\"restaurant-index\">\n\n                <div className=\"space-evenly\">\n\n       \n            <div className=\"add-new-customer\">\n            <AddNewCustomer letTheIndexComponentKnowThatWeAddedACustomer = {this.fetchCustomers} />\n            {/* we pass in this function so that after we add a new project in the addNewProject component */}\n            {/* that component will be able to tell this component to go check for new projects */}\n            </div>\n\n            <div>\n            <UpdateSpending updateCustomer = {this.updateCustomer} />\n            </div>\n            <div className=\"add-new-reward\">\n            <NewReward/>\n            </div>\n\n\n            <div className=\"show-rewards\">\n            <Rewards currentUser = {this.props.currentUser} />\n            </div>\n            \n                </div>\n\n            <h1>Your Customers</h1>\n            <div className=\"show-all-customers\">\n            {this.showAllCustomers()}\n            </div>\n\n\n\n\n            </div>\n        )\n    }\n\n\n\n}\n\n\nexport default RestaurantIndex;\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserService from './services/UserService';\nimport {Route, Switch, Link} from 'react-router-dom';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport CustomerDetails from './components/CustomerDetails';\nimport MainPage from './components/MainPage';\nimport RewardDetails from './components/RewardDetails';\n\n\nimport RestaurantIndex from './components/RestaurantIndex';\n\n\n\n\nclass App extends Component {\n\n  state={\n    loggedInUser: null,\n    error:null,\n    details:''\n  }\n  service = new UserService()\n\n\n  componentDidMount(props){\n    console.log('in app')\n    this.fetchUser()\n  }\n\n \n\n\n    fetchUser(){\n      // if( this.state.loggedInUser === null ){\n        this.service.loggedin()\n        .then(theActualUserFromDB =>{\n          console.log(theActualUserFromDB)\n          this.setState({\n            loggedInUser:  theActualUserFromDB\n          }) \n\n        })\n        .catch( err =>{\n          console.log('catch getting hit')\n          this.setState({\n            loggedInUser:  false\n          }) \n        })\n      // }\n    }\n\n\n\n    logInTheUser = (userToLogIn) => {\n      if(userToLogIn.username){\n        this.setState({loggedInUser: userToLogIn, error: false})\n      } else {\n        this.setState({\n          error:true,\n          details:userToLogIn\n        })\n      }\n    }\n\n\n\n    showUser = () =>{\n      if(this.state.error){\n        return (\n          <div>sry, {this.state.details.message}</div>\n        )\n      }\n      if(this.state.loggedInUser){\n        return(\n          <div>Welcome, {this.state.loggedInUser.username}</div>\n        )\n      }\n    }\n\n\n    logout = () =>{\n      this.service.logout().then(()=>{\n        this.setState({loggedInUser: null});\n      })\n    }\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"mainPage\">\n      <nav> \n        <p>{this.showUser()}</p>\n        <Link to=\"/\" class=\"link\"><img src=\"/lost-in-loyalty.png\" alt=\"loyalty\"/></Link>\n        <Link to=\"/signup\" class=\"link\"> Register</Link>\n        <Link to=\"/login\" class=\"link\"> Login </Link>\n        <Link to='/restaurant-index' class=\"link\" > Customers</Link>\n        <button onClick = {this.logout} >Logout</button>\n      </nav>\n\n        <Switch>\n          <Route path=\"/login\" render = {(props)=> <Login {...props} logTheUserIntoAppComponent = {this.logInTheUser} />  } />\n          <Route path=\"/signup\" render = {(props)=> <Signup {...props} logTheUserIntoAppComponent = {this.logInTheUser} />  } />\n\n          <Route path=\"/restaurant-index\" render={(props) => <RestaurantIndex {...props} currentUser={this.state.loggedInUser} /> } />\n          <Route path=\"/customers/details/:id\" component = {CustomerDetails} />\n          <Route path=\"/rewards/edit/:id\" render= {(props)=> <RewardDetails {...props} currentUser={this.state.loggedInUser} />} />\n          <Route path=\"/\" component = {MainPage}/>\n        </Switch>\n        \n        \n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}